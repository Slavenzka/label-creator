{"version":3,"sources":["components/Template/Template.module.scss","Pages/Home/Home.module.scss","components/Input/Input.module.scss","components/Checkbox/Checkbox.module.scss","components/Container/Container.module.scss","components/Barcode/Barcode.module.scss","serviceWorker.js","utils/const.js","store/reducers/elasticAdaptive.js","utils/index.js","store/reducers/ui.js","components/Container/Container.js","components/Input/Input.js","components/Checkbox/Checkbox.js","components/Form/Form.js","assets/icons/IconMale.js","assets/icons/IconFemale.js","components/Barcode/Barcode.js","components/Template/Template.js","Pages/Home/Home.js","App/DesktopApp.js","store/actions/elasticAdaptive.js","store/actions/actionTypes.js","hoc/ElasticAdaptive.js","ViewSwitcher/ViewSwitcher.js","index.js","components/Form/Form.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","DeviceTypes","initialState","deviceType","config","baseSize","baseWidth","process","widthLimit","curFontSize","debounce","func","lastTimeout","context","this","args","arguments","clearTimeout","setTimeout","apply","updateObject","object","field","Object","assign","modal","status","content","options","Container","children","className","classnames","css","wrapper","Input","type","label","name","props","htmlFor","input","textarea","Checkbox","checked","register","itemID","labelChecked","id","ref","Form","state","stateUpdater","sex","title","code","sizeUSA","sizeUK","sizeFrance","sizeDeutsch","sizeJapan","sizeChina","model","color","value","onChange","evt","target","dual","sizes","size","IconMale","xmlns","viewBox","cx","cy","r","d","IconFemale","Barcode","inputRef","useBarcode","format","font","fontSize","textMargin","background","barcode","Template","header","icon","body","item","key","info","manufacturer","length","Home","useState","formState","updateFormState","templateRef","useRef","heading","Number","isNaN","prevState","trigger","button","current","template","printable","Array","fill","templatePrint","DesktopApp","setDeviceType","payload","withRouter","useSelector","elastic","dispatch","useDispatch","useEffect","getDeviceType","changeSize","addEventListener","removeEventListener","isBrowser","isTablet","isMobileOnly","rootElement","document","getElementById","width","clientWidth","html","documentElement","actualWidth","Math","min","currentSize","style","ViewSwitcher","isMobile","rootReducer","combineReducers","action","ui","store","createStore","applyMiddleware","thunk","Content","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.239b9a07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Template_wrapper__2f745\",\"header\":\"Template_header__2Ybzt\",\"icon\":\"Template_icon__2B4Nn\",\"name\":\"Template_name__3nUPa\",\"body\":\"Template_body__SnJ5-\",\"sizes\":\"Template_sizes__3qg6z\",\"item\":\"Template_item__1T8TZ\",\"key\":\"Template_key__yrmvg\",\"value\":\"Template_value__Ig9eh\",\"info\":\"Template_info__1eHdc\",\"model\":\"Template_model__3T6sX\",\"label\":\"Template_label__3fRPQ\",\"manufacturer\":\"Template_manufacturer__39tBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Home_wrapper__r1ExQ\",\"heading\":\"Home_heading__bbP0i\",\"template\":\"Home_template__3_NLg\",\"button\":\"Home_button__32ecV\",\"print\":\"Home_print__10Cyd\",\"printable\":\"Home_printable__3Fif0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__2a4HG\",\"input\":\"Input_input__1zet3\",\"textarea\":\"Input_textarea__21Wve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Checkbox_label__1cxiw\",\"labelChecked\":\"Checkbox_labelChecked__3n5ym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Container_wrapper__-8iQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barcode\":\"Barcode_barcode__2AL4T\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const DeviceTypes = {\r\n  DESKTOP: 'desktop',\r\n  ADAPTIVE: 'adaptive'\r\n}\r\n\r\nexport const ButtonPalettes = {\r\n  LIGHT: 'light',\r\n  DARK: 'dark',\r\n  PALE: 'pale',\r\n  HIGHLIGHT: 'highlight',\r\n  TRANSPARENT: 'transparent'\r\n}\r\n\r\nexport const ModalThemes = {\r\n  BLACK: 'black',\r\n  PURPLE: 'purple'\r\n}\r\n\r\nexport const Statuses = {\r\n  OK: 200\r\n}\r\n\r\nexport const HeadingTypes = {\r\n  H2: 'h2',\r\n  H3: 'h3'\r\n}\r\n","import {\r\n  SET_CURRENT_FONT_SIZE, SET_USER_DEVICE_TYPE,\r\n} from 'store/actions/actionTypes'\r\nimport { DeviceTypes } from 'utils/const'\r\n\r\nconst initialState = {\r\n  deviceType: null,\r\n  config: {\r\n    [DeviceTypes.DESKTOP]: {\r\n      baseSize: 10,\r\n      baseWidth: process.env.REACT_APP_BASE_WIDTH_DESKTOP,\r\n      widthLimit: process.env.REACT_APP_WIDTH_LIMIT_DESKTOP\r\n    },\r\n    [DeviceTypes.ADAPTIVE]: {\r\n      baseSize: 10,\r\n      baseWidth: process.env.REACT_APP_BASE_WIDTH_ADAPTIVE,\r\n      widthLimit: process.env.REACT_APP_WIDTH_LIMIT_ADAPTIVE\r\n    }\r\n  },\r\n  curFontSize: 10\r\n}\r\n\r\nexport default function ElasticAdaptive (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_FONT_SIZE:\r\n      return {\r\n        ...state,\r\n        curFontSize: action.payload\r\n      }\r\n    case SET_USER_DEVICE_TYPE:\r\n      return {\r\n        ...state,\r\n        deviceType: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const debounce = func => {\r\n  let lastTimeout = null\r\n\r\n  return function () {\r\n    const context = this\r\n    const args = arguments\r\n\r\n    if (lastTimeout) {\r\n      clearTimeout(lastTimeout)\r\n    }\r\n\r\n    lastTimeout = setTimeout(function () {\r\n      func.apply(context, args)\r\n    }, 250)\r\n  }\r\n}\r\n\r\nexport const updateObject = (object, field) => Object.assign({}, object, field)\r\n\r\nexport const formatNumbers = (value, digits = 2) => {\r\n  if (value > 999) {\r\n    return String(+value.toFixed(digits)).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1 ')\r\n  }\r\n\r\n  return value\r\n}\r\n\r\nexport const scrollToElement = (el, offset = 0) => {\r\n  const targetOffset = el.getBoundingClientRect().top + window.scrollY\r\n\r\n  window.scrollTo({\r\n    top: targetOffset + offset,\r\n    behavior: 'smooth'\r\n  })\r\n}\r\n\r\nexport const isEmailValid = value => {\r\n  const valueArray = value.split('')\r\n  const regexp = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{1,12}$/\r\n\r\n  return valueArray.length > 0\r\n    ? valueArray.length >= 8 &&\r\n    valueArray.length < 50 &&\r\n    // в строке есть символ @\r\n    valueArray.indexOf('@') !== -1 &&\r\n    // в строке всего один символ @\r\n    valueArray.indexOf('@') === valueArray.lastIndexOf('@') &&\r\n    // в строке символ @ расположен так, что перед ним как минимум 2 символа\r\n    valueArray.indexOf('@') > 1 &&\r\n    // в строке символ @ расположен так, что после него как минимум 4 символов, например ab.ua\r\n    valueArray.indexOf('@') < value.length - 4 &&\r\n    // в строке есть точка\r\n    valueArray.indexOf('.') !== -1 &&\r\n    // в строке точка не первая\r\n    valueArray.indexOf('.') > 0 &&\r\n    // в строке последняя точка расположен так, что после нее как минимум 2 символа, например .ua\r\n    valueArray.lastIndexOf('.') < value.length - 1 &&\r\n    // в строке последняя точка находится раньше @\r\n    valueArray.lastIndexOf('.') > valueArray.lastIndexOf('@') &&\r\n    // в строке нет двух точек подряд\r\n    value.indexOf('..') === -1 &&\r\n    regexp.test(value)\r\n    : true\r\n}\r\n\r\nexport const validateName = () => ({\r\n  required: true,\r\n  validate: value => {\r\n    return `${value}`.length <= 50 && `${value}`.length >= 3 || `Пожалуйста, введите имя от 3 до 50 символов`\r\n  },\r\n  pattern: {\r\n    value: /^[A-Za-zА-Яа-яёЁ\\s']+$/,\r\n    message: 'Имя может содержать лишь буквы латинского или кириллического алфавитов',\r\n  },\r\n})\r\n\r\nexport const validateEmail = () => ({\r\n  validate: value => isEmailValid(value) || 'Проверьте правильность введенного адреса'\r\n})\r\n\r\nexport const validatePhone = () => ({\r\n  validate: {\r\n    isPhone: value => {\r\n      const purifiedString = `${value}`.split(' ').join('')\r\n      return purifiedString === '' ||\r\n        (!Number.isNaN(+purifiedString) && purifiedString.length >= 9 && purifiedString.length <= 20) ||\r\n        `Проверьте корректность введенного номера телефона и убедитесь, что он не короче 9 и не длиннее 20 символов`\r\n    }\r\n  }\r\n})\r\n\r\nexport const validateBarcode = code => {\r\n  if (code.length > 13) return code.slice(0, 13)\r\n  if (code.length < 13) {\r\n    const diff = 13 - code.length\r\n    return [code].concat(new Array(diff).fill('0')).join('')\r\n  }\r\n}\r\n","import {\r\n  TOGGLE_MODAL\r\n} from 'store/actions/actionTypes'\r\nimport { updateObject } from 'utils'\r\n\r\nconst initialState = {\r\n  modal: {\r\n    status: false,\r\n    content: null,\r\n    options: {}\r\n  },\r\n}\r\n\r\nexport function uiReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_MODAL:\r\n      return updateObject(state, { modal: {\r\n        status: action.payload.status,\r\n        content: action.payload.content,\r\n        options: action.payload.options\r\n      }})\r\n    default: return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport css from './Container.module.scss'\r\nimport classnames from 'classnames'\r\n\r\nconst Container = ({\r\n  children,\r\n  className,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={classnames(css.wrapper, className)}\r\n    >\r\n      { children }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport css from './Input.module.scss'\r\nimport classnames from 'classnames'\r\n\r\nconst Input = ({\r\n  className,\r\n  type = 'text',\r\n  label,\r\n  name,\r\n  ...props\r\n}) => {\r\n  const getElement = () => {\r\n    if (type === 'textarea') {\r\n      return (\r\n        <textarea\r\n          className={classnames(css.input, css.textarea)}\r\n          {...props}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <input\r\n        className={css.input}\r\n        type='text'\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classnames(css.wrapper, className)}>\r\n      {label &&\r\n        <label className={css.label} htmlFor={name}>\r\n          { label }\r\n        </label>\r\n      }\r\n      { getElement() }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport css from './Checkbox.module.scss'\r\nimport classnames from 'classnames'\r\n\r\nconst Checkbox = ({\r\n  className,\r\n  name,\r\n  checked,\r\n  register = () => {},\r\n  ...props\r\n}) => {\r\n  const itemID = `checkbox - ${name}`\r\n\r\n  return (\r\n    <span className={classnames(css.wrapper, className)}>\r\n      <label\r\n        className={classnames(css.label, {\r\n          [css.labelChecked]: checked\r\n        })}\r\n        htmlFor={itemID}\r\n      >\r\n        <input\r\n          className={'visuallyHidden'}\r\n          type='checkbox'\r\n          id={itemID}\r\n          checked={checked}\r\n          ref={register}\r\n          {...props}\r\n        />\r\n      </label>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Checkbox\r\n","import React from 'react'\r\nimport css from './Form.module.scss'\r\nimport Input from 'components/Input/Input'\r\nimport Checkbox from 'components/Checkbox/Checkbox'\r\n\r\nconst Form = ({state, stateUpdater}) => {\r\n  const {\r\n    sex,\r\n    title, code,\r\n    sizeUSA,\r\n    sizeUK,\r\n    sizeFrance,\r\n    sizeDeutsch,\r\n    sizeJapan,\r\n    sizeChina,\r\n    model,\r\n    color,\r\n  } = state\r\n\r\n  return (\r\n    <form>\r\n      <div className={css.wrapper}>\r\n        <Input\r\n          className={css.name}\r\n          label={ `Название` }\r\n          value={ title }\r\n          onChange={evt => stateUpdater({field: 'title', value: evt.target.value})}\r\n          name={ `title` }\r\n          type={ `textarea` }\r\n        />\r\n        <Input\r\n          className={css.code}\r\n          label={ `Штрихкод` }\r\n          value={ code }\r\n          onChange={evt => stateUpdater({field: 'code', value: evt.target.value})}\r\n          name={ `code` }\r\n        />\r\n        <div className={css.dual}>\r\n          <Input\r\n            label={ `Номер модели` }\r\n            value={ model }\r\n            onChange={evt => stateUpdater({field: 'model', value: evt.target.value})}\r\n            name={ `model` }\r\n          />\r\n          <Input\r\n            label={ `Цвет модели` }\r\n            value={ color }\r\n            onChange={evt => stateUpdater({field: 'color', value: evt.target.value})}\r\n            name={ `color` }\r\n          />\r\n        </div>\r\n        <div className={css.sizes}>\r\n          <Input\r\n            className={css.size}\r\n            label={ `Размер USA` }\r\n            value={ sizeUSA }\r\n            onChange={evt => stateUpdater({field: 'sizeUSA', value: evt.target.value})}\r\n            name={ `sizeUSA` }\r\n          />\r\n          <Input\r\n            className={css.size}\r\n            label={ `Размер UK` }\r\n            value={ sizeUK }\r\n            onChange={evt => stateUpdater({field: 'sizeUK', value: evt.target.value})}\r\n            name={ `sizeUK` }\r\n          />\r\n          <Input\r\n            className={css.size}\r\n            label={ `Размер France` }\r\n            value={ sizeFrance }\r\n            onChange={evt => stateUpdater({field: 'sizeFrance', value: evt.target.value})}\r\n            name={ `sizeFrance` }\r\n          />\r\n          <Input\r\n            className={css.size}\r\n            label={ `Размер Deutsch` }\r\n            value={ sizeDeutsch }\r\n            onChange={evt => stateUpdater({field: 'sizeDeutsch', value: evt.target.value})}\r\n            name={ `sizeDeutsch` }\r\n          />\r\n          <Input\r\n            className={css.size}\r\n            label={ `Размер Japan` }\r\n            value={ sizeJapan }\r\n            onChange={evt => stateUpdater({field: 'sizeJapan', value: evt.target.value})}\r\n            name={ `sizeJapan` }\r\n          />\r\n          <Input\r\n            className={css.size}\r\n            label={ `Размер China` }\r\n            value={ sizeChina }\r\n            onChange={evt => stateUpdater({field: 'sizeChina', value: evt.target.value})}\r\n            name={ `sizeChina` }\r\n          />\r\n        </div>\r\n        <div className={css.sex}>\r\n          <span>Жен</span>\r\n          <Checkbox\r\n            checked={sex}\r\n            onChange={() => stateUpdater({field: 'sex', value: !sex})}\r\n          />\r\n          <span>Муж</span>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst IconMale = ({className}) => (\r\n  <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'>\r\n    <circle cx='256' cy='51.2' r='51.2'/>\r\n    <path d='M341.333,119.467H170.667c-23.564,0-42.667,19.103-42.667,42.667v128c0,14.138,11.461,25.6,25.6,25.6\r\n      c14.138,0,25.6-11.461,25.6-25.6V179.2h17.067v307.2c0,14.138,11.462,25.6,25.6,25.6s25.6-11.461,25.6-25.6V315.733h17.067V486.4\r\n      c0,14.138,11.462,25.6,25.6,25.6s25.6-11.461,25.6-25.6V179.2H332.8v110.933c0,14.138,11.462,25.6,25.6,25.6\r\n      s25.6-11.461,25.6-25.6v-128C384,138.569,364.898,119.467,341.333,119.467z'/>\r\n  </svg>\r\n)\r\n\r\nexport default IconMale\r\n","import React from 'react'\r\n\r\nconst IconFemale = ({className}) => (\r\n  <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'>\r\n    <path d='M384.977,276.115c-0.33-0.902-33.149-90.694-47.603-132.749c-9.325-27.136-24.962-40.895-46.474-40.895\r\n\t\t\tc-29.934,0-39.899,0-69.8,0c-21.512,0-37.149,13.759-46.474,40.895c-14.452,42.055-47.272,131.848-47.603,132.749\r\n\t\t\tc-3.812,10.425,1.549,21.968,11.975,25.779c10.425,3.812,21.968-1.551,25.779-11.975c0.273-0.748,22.776-62.314,38.824-107.645\r\n\t\t\tc1.435,4.712,4.37,8.758,8.233,11.627l0.048,29.451l-34.573,87.18c-1.885,4.755,0.875,10.067,5.834,11.259\r\n\t\t\tc5.161,1.24,11.996,2.93,19.41,4.782V487.88c0,13.321,10.799,24.12,24.12,24.12c13.321,0,24.12-10.799,24.12-24.12V337.975\r\n\t\t\tc3.464,0.307,6.948,0.305,10.413-0.006V487.88c0,13.321,10.799,24.12,24.12,24.12c13.321,0,24.12-10.799,24.12-24.12V326.551\r\n\t\t\tc7.407-1.852,14.236-3.538,19.398-4.776c4.924-1.18,7.731-6.492,5.84-11.261l-34.567-87.163l0.048-29.451\r\n\t\t\tc3.864-2.868,6.797-6.914,8.233-11.627c16.047,45.331,38.551,106.897,38.824,107.645c3.812,10.426,15.354,15.787,25.779,11.975\r\n\t\t\tC383.428,298.083,388.789,286.54,384.977,276.115z'/>\r\n    <circle cx='256' cy='43.898' r='43.898'/>\r\n  </svg>\r\n)\r\n\r\nexport default IconFemale\r\n","import React from 'react'\r\nimport css from './Barcode.module.scss'\r\nimport { useBarcode } from 'react-barcodes'\r\n\r\nconst Barcode = ({value}) => {\r\n  const { inputRef } = useBarcode({\r\n    value: value,\r\n    options: {\r\n      format: 'ean13',\r\n      font: 'OCRB',\r\n      fontSize: 18,\r\n      textMargin: 0,\r\n      background: 'transparent',\r\n    }\r\n  })\r\n\r\n  return (\r\n    <svg className={css.barcode} ref={inputRef} />\r\n  )\r\n}\r\n\r\nexport default Barcode\r\n","import React from 'react'\r\nimport css from './Template.module.scss'\r\nimport classnames from 'classnames'\r\nimport IconMale from 'assets/icons/IconMale'\r\nimport IconFemale from 'assets/icons/IconFemale'\r\nimport Barcode from 'components/Barcode/Barcode'\r\n\r\nconst Template = ({className, state}) => {\r\n  const {\r\n    sex,\r\n    title,\r\n    code,\r\n    sizeUSA,\r\n    sizeUK,\r\n    sizeFrance,\r\n    sizeDeutsch,\r\n    sizeJapan,\r\n    sizeChina,\r\n    model,\r\n    color\r\n  } = state\r\n\r\n  return (\r\n    <div className={classnames(css.wrapper, className)}>\r\n      <div className={css.header}>\r\n        {sex\r\n          ? <IconMale className={css.icon} />\r\n          : <IconFemale className={css.icon} />\r\n        }\r\n        <h2 className={css.name}>\r\n          { title }\r\n        </h2>\r\n      </div>\r\n      <div className={css.body}>\r\n        <dl className={css.sizes}>\r\n          <div className={css.item}>\r\n            <dt className={css.key}>\r\n              USA\r\n            </dt>\r\n            <dd className={css.value}>\r\n              { sizeUSA }\r\n            </dd>\r\n          </div>\r\n          <div className={css.item}>\r\n            <dt className={css.key}>\r\n              UK\r\n            </dt>\r\n            <dd className={css.value}>\r\n              { sizeUK }\r\n            </dd>\r\n          </div>\r\n          <div className={css.item}>\r\n            <dt className={css.key}>\r\n              F\r\n            </dt>\r\n            <dd className={css.value}>\r\n              { sizeFrance }\r\n            </dd>\r\n          </div>\r\n          <div className={css.item}>\r\n            <dt className={css.key}>\r\n              D\r\n            </dt>\r\n            <dd className={css.value}>\r\n              { sizeDeutsch }\r\n            </dd>\r\n          </div>\r\n          <div className={css.item}>\r\n            <dt className={css.key}>\r\n              J\r\n            </dt>\r\n            <dd className={css.value}>\r\n              { sizeJapan }\r\n            </dd>\r\n          </div>\r\n          <div className={css.item}>\r\n            <dt className={css.key}>\r\n              CHN\r\n            </dt>\r\n            <dd className={css.value}>\r\n              { sizeChina }\r\n            </dd>\r\n          </div>\r\n        </dl>\r\n        <div className={css.info}>\r\n          <p className={css.model}>\r\n            { model }\r\n          </p>\r\n          <p className={css.label}>\r\n            { color }\r\n          </p>\r\n          <span className={css.label}>\r\n            ORIGINALS\r\n          </span>\r\n          <span className={css.manufacturer}>\r\n            MADE IN CHINA\r\n          </span>\r\n        </div>\r\n        <div>\r\n          {code.length === 12 && <Barcode value={code} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Template\r\n","import React, { useState, useRef } from 'react'\r\nimport css from './Home.module.scss'\r\nimport Container from 'components/Container/Container'\r\nimport Form from 'components/Form/Form'\r\nimport Template from 'components/Template/Template'\r\nimport ReactToPrint from 'react-to-print'\r\n\r\nconst Home = () => {\r\n  const [formState, updateFormState] = useState({\r\n    sex: true,\r\n    code: '123456789012',\r\n    title: 'Some demo title',\r\n    sizeUSA: '8',\r\n    sizeUK: '7 1/2',\r\n    sizeFrance: '41 1/3',\r\n    sizeDeutsch: '7 1/2',\r\n    sizeJapan: '260',\r\n    sizeChina: '255',\r\n    model: 'FV3254',\r\n    color: 'LUNDRF',\r\n  })\r\n\r\n  const updateFormData = ({field, value}) => {\r\n    if (field === 'code') {\r\n      if (Number.isNaN(+value[value.length - 1])) {\r\n        updateFormState(prevState => ({\r\n          ...prevState,\r\n          [field]: formState.code,\r\n        }))\r\n      }\r\n\r\n      if (value.length > 12 && formState.code.length === 12) {\r\n        updateFormState(prevState => ({\r\n          ...prevState,\r\n          [field]: formState.code,\r\n        }))\r\n      }\r\n\r\n      if (value.length <= 12 && !Number.isNaN(+value[value.length - 1])) {\r\n        updateFormState(prevState => ({\r\n          ...prevState,\r\n          [field]: value,\r\n        }))\r\n      }\r\n    } else {\r\n      updateFormState(prevState => ({\r\n        ...prevState,\r\n        [field]: value,\r\n      }))\r\n    }\r\n  }\r\n\r\n  const templateRef = useRef(null)\r\n\r\n  return (\r\n    <Container className={css.wrapper}>\r\n      <h1 className={css.heading}>\r\n        Конструктор наклеек Adidas\r\n      </h1>\r\n      <Form\r\n        state={formState}\r\n        stateUpdater={updateFormData}\r\n      />\r\n      <ReactToPrint\r\n        trigger={() => (\r\n          <button\r\n            className={css.button}\r\n            type={ `button` }\r\n          >\r\n            Отправить на печать\r\n          </button>\r\n        )}\r\n        content={() => templateRef.current}\r\n      />\r\n      <Template\r\n        className={css.template}\r\n        state={formState}\r\n      />\r\n      <div className={css.printable} ref={templateRef}>\r\n        {new Array(6).fill(<Template className={css.templatePrint} state={formState} />)}\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport Home from 'Pages/Home/Home'\r\n\r\nconst DesktopApp = () => {\r\n  return (\r\n    <main>\r\n      <Home />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default DesktopApp\r\n","import {\r\n  SET_CURRENT_FONT_SIZE, SET_USER_DEVICE_TYPE,\r\n} from 'store/actions/actionTypes'\r\n\r\nexport const setFontSize = data => {\r\n  return {\r\n    type: SET_CURRENT_FONT_SIZE,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const setDeviceType = type => {\r\n  return {\r\n    type: SET_USER_DEVICE_TYPE,\r\n    payload: type\r\n  }\r\n}\r\n","// elastic adaptive\r\nexport const SET_CURRENT_FONT_SIZE = 'SET_CURRENT_FONT_SIZE'\r\nexport const SET_USER_DEVICE_TYPE = 'SET_USER_DEVICE_TYPE'\r\n\r\n// ui\r\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL'\r\n","import { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { setDeviceType, setFontSize } from 'store/actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { debounce } from 'utils'\r\nimport { isBrowser, isTablet, isMobileOnly } from 'react-device-detect'\r\nimport { DeviceTypes } from 'utils/const'\r\n\r\n// hoc for html font size adjustment in correspondence with user's screen width\r\nconst ElasticAdaptive = ({ children }) => {\r\n  const state = useSelector(state => state.elastic.config)\r\n  const type = useSelector(state => state.elastic.deviceType)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    getDeviceType()\r\n    type && changeSize()\r\n    window.addEventListener('resize', debounce(changeSize))\r\n    window.addEventListener('orientationchange', debounce(changeSize))\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', debounce(changeSize))\r\n      window.removeEventListener('orientationchange', debounce(changeSize))\r\n    }\r\n  })\r\n\r\n  const getDeviceType = () => {\r\n    if (isBrowser) {\r\n      dispatch(setDeviceType(DeviceTypes.DESKTOP))\r\n    }\r\n\r\n    if (isTablet || isMobileOnly) {\r\n      dispatch(setDeviceType(DeviceTypes.ADAPTIVE))\r\n    }\r\n  }\r\n\r\n  const changeSize = () => {\r\n    setTimeout(() => {\r\n      // I use root element instead of documentElement to \"see\" body padding-right added by\r\n      // body-scroll-lock\r\n      const rootElement = document.getElementById('root')\r\n      let width = rootElement.clientWidth || rootElement.clientWidth\r\n      getDeviceType()\r\n      if (type) {\r\n        const html = document.documentElement\r\n        const {widthLimit, baseWidth} = state[type]\r\n        let {baseSize} = state[type]\r\n        let actualWidth = width\r\n\r\n        if (widthLimit) {\r\n          actualWidth = Math.min(width, widthLimit)\r\n        }\r\n\r\n        const currentSize = actualWidth / baseWidth * baseSize\r\n        dispatch(setFontSize(currentSize))\r\n        html.style.fontSize = currentSize + 'px'\r\n      }\r\n    })\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nexport default withRouter(ElasticAdaptive)\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport DesktopApp from 'App/DesktopApp'\r\nimport ElasticAdaptive from 'hoc/ElasticAdaptive'\r\nimport { isBrowser, isMobile } from 'react-device-detect'\r\nimport { setDeviceType } from 'store/actions'\r\nimport { DeviceTypes } from 'utils/const'\r\n\r\nconst ViewSwitcher = () => {\r\n  const type = useSelector(state => state.elastic.deviceType)\r\n  const dispatch = useDispatch()\r\n\r\n  // to avoid excessive render of wrong view (desktop for adaptive users) initial value of\r\n  // state.elastic.deviceType is null and is defined before render anything at all\r\n  useEffect(() => {\r\n    const getDeviceType = () => {\r\n      if (isBrowser) {\r\n        dispatch(setDeviceType(DeviceTypes.DESKTOP))\r\n      }\r\n\r\n      if (isMobile) {\r\n        dispatch(setDeviceType(DeviceTypes.ADAPTIVE))\r\n      }\r\n    }\r\n\r\n    getDeviceType()\r\n  })\r\n\r\n  if (!type) return null\r\n\r\n  return (\r\n    <ElasticAdaptive>\r\n      <DesktopApp />\r\n    </ElasticAdaptive>\r\n  )\r\n}\r\n\r\nexport default ViewSwitcher\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css'\r\nimport 'styles/common.scss'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport elasticAdaptive from 'store/reducers/elasticAdaptive'\r\nimport thunk from 'redux-thunk'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { uiReducer } from 'store/reducers/ui'\r\nimport ViewSwitcher from 'ViewSwitcher/ViewSwitcher'\r\n\r\nconst rootReducer = combineReducers({\r\n  elastic: elasticAdaptive,\r\n  ui: uiReducer\r\n})\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk))\r\n\r\nconst Content = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <ViewSwitcher />\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(Content, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__r3qF0\",\"name\":\"Form_name__1b31x\",\"code\":\"Form_code__3EFd0\",\"sizes\":\"Form_sizes__hGZAs\",\"size\":\"Form_size__bfEC8\",\"dual\":\"Form_dual__XVGzZ\",\"sex\":\"Form_sex__2Tpec\"};"],"sourceRoot":""}